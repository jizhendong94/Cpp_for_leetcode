/*877 石子游戏
游戏规则是这样的：你和你的朋友面前有一排石头堆，用一个数组 piles 表示，
piles[i] 表示第 i 堆石子有多少个。你们轮流拿石头，一次拿一堆，
但是只能拿走最左边或者最右边的石头堆。所有石头被拿完后，谁拥有的石头多，谁获胜。

只要你足够聪明，你是必胜无疑的，因为你是先手。
而作为第一个拿石头的人，你可以控制自己拿到所有偶数堆，或者所有的奇数堆
*/

bool stoneGame(vector<int>& piles)
{
    return true;
}


/*Nim 游戏

你和你的朋友面前有一堆石子，你们轮流拿，一次至少拿一颗，最多拿三颗，
谁拿走最后一颗石子谁获胜。假设你们都很聪明，由你第一个开始拿，
请你写一个算法，输入一个正整数 n，返回你是否能赢（true 或 false）。

*/
bool canWinNim(int n)
{
    //如果上来就是4的倍数，那就认输吧
    //如果不是4的倍数，可以把对方控制在4的倍数，必胜
    return n%4 != 0;
}


/*319  
这个问题是这样描述的：有 n 盏电灯，最开始时都是关着的。现在要进行 n 轮操作：

第 1 轮操作是把每一盏电灯的开关按一下（全部打开）。

第 2 轮操作是把每两盏灯的开关按一下（就是按第 2，4，6… 盏灯的开关，它们被关闭）。

第 3 轮操作是把每三盏灯的开关按一下（就是按第 3，6，9… 盏灯的开关，有的被关闭，比如 3，
有的被打开，比如 6）…

如此往复，直到第 n 轮，即只按一下第 n 盏灯的开关。

现在给你输入一个正整数 n 代表电灯的个数，问你经过 n 轮操作后，这些电灯有多少盏是亮的？
*/

int bulbSwitch(int n) {
        return sqrt(n);
    }






